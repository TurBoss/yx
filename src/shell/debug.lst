                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.0 #7066 (Jun 14 2012) (Linux)
                              4 ; This file was generated Tue Nov 27 20:32:59 2012
                              5 ;--------------------------------------------------------
                              6 	.module debug
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _y
                             13 	.globl _x
                             14 	.globl _dbg_cls
                             15 	.globl _dbg_putc_xy
                             16 	.globl _dbg_scroll
                             17 	.globl _dbg_say
                             18 	.globl _dbg_wtox
                             19 	.globl _dbg_memdump
                             20 	.globl _dbg_taskdump
                             21 	.globl _dbg_timerdump
                             22 	.globl _dbg_eventdump
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ;  ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
   0000                      30 _x::
   0000                      31 	.ds 1
   0001                      32 _y::
   0001                      33 	.ds 1
                             34 ;--------------------------------------------------------
                             35 ; overlayable items in  ram 
                             36 ;--------------------------------------------------------
                             37 	.area _OVERLAY
                             38 ;--------------------------------------------------------
                             39 ; external initialized ram data
                             40 ;--------------------------------------------------------
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _GSINIT
                             46 	.area _GSFINAL
                             47 	.area _GSINIT
                             48 ;debug.c:9: byte x=0;
   0000 FD 21r00s00          49 	ld	iy,#_x
   0004 FD 36 00 00          50 	ld	0 (iy),#0x00
                             51 ;debug.c:10: byte y=23;
   0008 FD 21r01s00          52 	ld	iy,#_y
   000C FD 36 00 17          53 	ld	0 (iy),#0x17
                             54 ;--------------------------------------------------------
                             55 ; Home
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _HOME
                             59 ;--------------------------------------------------------
                             60 ; code
                             61 ;--------------------------------------------------------
                             62 	.area _CODE
                             63 ;debug.c:15: void dbg_cls() __naked {
                             64 ;	---------------------------------
                             65 ; Function dbg_cls
                             66 ; ---------------------------------
   0000                      67 _dbg_cls_start::
   0000                      68 _dbg_cls:
                             69 ;debug.c:35: __endasm;
                             70 ;;	first clear contents of vmemory
   0000 21 00 40             71 	ld	hl,#0x4000 ; vmemory
   0003 01 00 18             72 	ld	bc,#0x1800 ; vmem size
   0006 75                   73 	ld	(hl),l ; l = 0
   0007 54                   74 	ld	d,h
   0008 1E 01                75 	ld	e,#1
   000A ED B0                76 	ldir	; clear screen
                             77 ;;	now the attributes
   000C 36 38                78 	ld	(hl),#0b00111000
   000E 01 FF 02             79 	ld	bc,#0x02ff ; size of attr
   0011 ED B0                80 	ldir
                             81 ;;	and the border
   0013 3E 07                82 	ld	a,#0b00000111 ; gray border
   0015 D3 FE                83 	out	(0xfe),a ; set border
   0017 C9                   84 	ret
   0018                      85 _dbg_cls_end::
                             86 ;debug.c:43: void dbg_putc_xy(byte c, byte x, byte y) __naked {
                             87 ;	---------------------------------
                             88 ; Function dbg_putc_xy
                             89 ; ---------------------------------
   0018                      90 _dbg_putc_xy_start::
   0018                      91 _dbg_putc_xy:
                             92 ;debug.c:116: __endasm;	
   0018 FD 21 00 00          93 	ld	iy,#0x0000
   001C FD 39                94 	add	iy,sp
                             95 ;;	convert y to hires
   001E FD 46 03             96 	ld	b,3(iy) ; get x coordinate into b
   0021 FD 4E 04             97 	ld	c,4(iy) ; get y coordinate into a
   0024 CB 21                98 	sla	c
   0026 CB 21                99 	sla	c
   0028 CB 21               100 	sla	c ; c=c*8 (hires y coordinate 0..191)
                            101 ;;	calculate character inside font
   002A FD 7E 02            102 	ld	a,2(iy) ; get character
   002D D6 20               103 	sub	#32 ; a = a-32
   002F 26 00               104 	ld	h,#0x00 ; h=0
   0031 6F                  105 	ld	l,a ; hl=a
   0032 29                  106 	add	hl,hl ; hl=hl*2
   0033 29                  107 	add	hl,hl ; hl=hl*4
   0034 29                  108 	add	hl,hl ; hl=hl*8
   0035 11r00s00            109 	ld	de,#sysfont8x8 ; font address
   0038 19                  110 	add	hl,de ; hl=character address
   0039 EB                  111 	ex	de,hl ; into de
                            112 ;;	calculate row memory address
   003A 79                  113 	ld	a,c ; get y
   003B E6 07               114 	and	#0x07 ; leave only bits 0-2
   003D 67                  115 	ld	h,a ; to high
   003E 79                  116 	ld	a,c ; y back to acc.
   003F E6 38               117 	and	#0x38 ; bits 3-5 need to be
   0041 17                  118 	rla	; shifted left
   0042 17                  119 	rla	; twice
   0043 6F                  120 	ld	l,a ; and placed into l
   0044 79                  121 	ld	a,c ; y back to acc.
   0045 E6 C0               122 	and	#0xc0 ; bits 6-7
   0047 1F                  123 	rra	; shifted...
   0048 1F                  124 	rra	; ...three...
   0049 1F                  125 	rra	; ...times
   004A B4                  126 	or	h ; ored into high
   004B F6 40               127 	or	#0x40 ; or video memory address to h
   004D 67                  128 	ld	h,a ; hl = row addr
                            129 ;;	add x offset
   004E 7D                  130 	ld	a,l
   004F 80                  131 	add	b ; add x to l
   0050 30 01               132 	jr	nc,nocarry ; no carry
   0052 24                  133 	inc	h
   0053                     134 	nocarry:
   0053 6F                  135 	ld	l,a
                            136 ;;	and now loop it
   0054 06 08               137 	ld	b,#8 ; eight lines
   0056                     138 	loop:
   0056 1A                  139 	ld	a,(de) ; get character byte
   0057 13                  140 	inc	de ; next byte
   0058 77                  141 	ld	(hl),a ; transfer to screen
                            142 ;;	next line
   0059 24                  143 	inc	h
   005A 7C                  144 	ld	a,h
   005B E6 07               145 	and	#7
   005D 20 0A               146 	jr	nz,next_line
   005F 7D                  147 	ld	a,l
   0060 C6 20               148 	add	a,#32
   0062 6F                  149 	ld	l,a
   0063 38 04               150 	jr	c, next_line
   0065 7C                  151 	ld	a,h
   0066 D6 08               152 	sub	#8
   0068 67                  153 	ld	h,a
   0069                     154 	next_line:
   0069 10 EB               155 	djnz	loop
   006B C9                  156 	ret
   006C                     157 _dbg_putc_xy_end::
                            158 ;debug.c:122: void dbg_scroll() __naked {
                            159 ;	---------------------------------
                            160 ; Function dbg_scroll
                            161 ; ---------------------------------
   006C                     162 _dbg_scroll_start::
   006C                     163 _dbg_scroll:
                            164 ;debug.c:168: __endasm;
   006C 06 08               165 	ld	b,#8 ; 8 lines
   006E                     166 	scroll_up:
   006E C5                  167 	push	bc ; store
   006F F5                  168 	push	af
   0070 3E C0               169 	ld	a,#192 ; lines to move
   0072 11 00 40            170 	ld	de,#0x4000 ; start here
   0075                     171 	loopscroll:
   0075 D5                  172 	push	de ; store de
   0076 F5                  173 	push	af
                            174 ;;	calculate next line de=next_line(de)
   0077 14                  175 	inc	d
   0078 7A                  176 	ld	a,d
   0079 E6 07               177 	and	#7
   007B 20 0A               178 	jr	nz,nl_done
   007D 7B                  179 	ld	a,e
   007E C6 20               180 	add	a,#32
   0080 5F                  181 	ld	e,a
   0081 38 04               182 	jr	c,nl_done
   0083 7A                  183 	ld	a,d
   0084 D6 08               184 	sub	#8
   0086 57                  185 	ld	d,a
   0087                     186 	nl_done:
   0087 F1                  187 	pop	af
   0088 EB                  188 	ex	de,hl ; de to hl
   0089 D1                  189 	pop	de ; previous line to de
   008A 01 20 00            190 	ld	bc,#32 ; 32 bytes to move
   008D E5                  191 	push	hl ; store new line
   008E ED B0               192 	ldir	; move one line
   0090 D1                  193 	pop	de ; restore new line to de
   0091 3D                  194 	dec	a ; reduce line count
   0092 28 02               195 	jr	z,endscroll ; is it zero?
   0094 18 DF               196 	jr	loopscroll
   0096                     197 	endscroll:
   0096 F1                  198 	pop	af
   0097 21 E0 57            199 	ld	hl,#0x57e0 ; last line address
   009A 06 20               200 	ld	b,#32
   009C                     201 	clear_line:
   009C 36 00               202 	ld	(hl),#0
   009E 23                  203 	inc	hl
   009F 10 FB               204 	djnz	clear_line
   00A1 C1                  205 	pop	bc
   00A2 10 CA               206 	djnz	scroll_up
   00A4 C9                  207 	ret
   00A5                     208 _dbg_scroll_end::
                            209 ;debug.c:174: void dbg_say(string msg) {
                            210 ;	---------------------------------
                            211 ; Function dbg_say
                            212 ; ---------------------------------
   00A5                     213 _dbg_say_start::
   00A5                     214 _dbg_say:
   00A5 DD E5               215 	push	ix
   00A7 DD 21 00 00         216 	ld	ix,#0
   00AB DD 39               217 	add	ix,sp
                            218 ;debug.c:175: while(*msg) { 
   00AD DD 5E 04            219 	ld	e,4 (ix)
   00B0 DD 56 05            220 	ld	d,5 (ix)
   00B3                     221 00111$:
   00B3 1A                  222 	ld	a,(de)
                            223 ;debug.c:176: switch(*msg) {
   00B4 47                  224 	ld	b,a
   00B5 B7                  225 	or	a,a
   00B6 28 6D               226 	jr	Z,00114$
   00B8 FE 08               227 	cp	a,#0x08
   00BA 28 12               228 	jr	Z,00102$
   00BC D6 0A               229 	sub	a, #0x0A
   00BE 20 1D               230 	jr	NZ,00105$
                            231 ;debug.c:178: x=0;
   00C0 21r00s00            232 	ld	hl,#_x + 0
   00C3 36 00               233 	ld	(hl), #0x00
                            234 ;debug.c:179: y++;
   00C5 FD 21r01s00         235 	ld	iy,#_y
   00C9 FD 34 00            236 	inc	0 (iy)
                            237 ;debug.c:180: break;
   00CC 18 2A               238 	jr	00106$
                            239 ;debug.c:181: case '\b':
   00CE                     240 00102$:
                            241 ;debug.c:182: if (x>0) x--;
   00CE FD 21r00s00         242 	ld	iy,#_x
   00D2 FD 7E 00            243 	ld	a,0 (iy)
   00D5 B7                  244 	or	a, a
   00D6 28 20               245 	jr	Z,00106$
   00D8 FD 35 00            246 	dec	0 (iy)
                            247 ;debug.c:183: break;
   00DB 18 1B               248 	jr	00106$
                            249 ;debug.c:184: default:
   00DD                     250 00105$:
                            251 ;debug.c:185: dbg_putc_xy(*msg, x++, y);		
   00DD FD 21r00s00         252 	ld	iy,#_x
   00E1 FD 4E 00            253 	ld	c,0 (iy)
   00E4 FD 34 00            254 	inc	0 (iy)
   00E7 D5                  255 	push	de
   00E8 3Ar01s00            256 	ld	a,(_y)
   00EB F5                  257 	push	af
   00EC 33                  258 	inc	sp
   00ED 79                  259 	ld	a,c
   00EE F5                  260 	push	af
   00EF 33                  261 	inc	sp
   00F0 C5                  262 	push	bc
   00F1 33                  263 	inc	sp
   00F2 CDr18s00            264 	call	_dbg_putc_xy
   00F5 F1                  265 	pop	af
   00F6 33                  266 	inc	sp
   00F7 D1                  267 	pop	de
                            268 ;debug.c:186: }
   00F8                     269 00106$:
                            270 ;debug.c:187: if (x>31) {
   00F8 3E 1F               271 	ld	a,#0x1F
   00FA FD 21r00s00         272 	ld	iy,#_x
   00FE FD 96 00            273 	sub	a, 0 (iy)
   0101 30 0B               274 	jr	NC,00108$
                            275 ;debug.c:188: x=0;
   0103 FD 36 00 00         276 	ld	0 (iy),#0x00
                            277 ;debug.c:189: y++;
   0107 FD 21r01s00         278 	ld	iy,#_y
   010B FD 34 00            279 	inc	0 (iy)
   010E                     280 00108$:
                            281 ;debug.c:191: if (y>23) {
   010E 3E 17               282 	ld	a,#0x17
   0110 FD 21r01s00         283 	ld	iy,#_y
   0114 FD 96 00            284 	sub	a, 0 (iy)
   0117 30 09               285 	jr	NC,00110$
                            286 ;debug.c:192: y=23;
   0119 FD 36 00 17         287 	ld	0 (iy),#0x17
                            288 ;debug.c:193: dbg_scroll();
   011D D5                  289 	push	de
   011E CDr6Cs00            290 	call	_dbg_scroll
   0121 D1                  291 	pop	de
   0122                     292 00110$:
                            293 ;debug.c:195: msg++;	
   0122 13                  294 	inc	de
   0123 18 8E               295 	jr	00111$
   0125                     296 00114$:
   0125 DD E1               297 	pop	ix
   0127 C9                  298 	ret
   0128                     299 _dbg_say_end::
                            300 ;debug.c:200: void dbg_wtox(word w, string destination) {
                            301 ;	---------------------------------
                            302 ; Function dbg_wtox
                            303 ; ---------------------------------
   0128                     304 _dbg_wtox_start::
   0128                     305 _dbg_wtox:
   0128 DD E5               306 	push	ix
   012A DD 21 00 00         307 	ld	ix,#0
   012E DD 39               308 	add	ix,sp
   0130 21 EA FF            309 	ld	hl,#-22
   0133 39                  310 	add	hl,sp
   0134 F9                  311 	ld	sp,hl
                            312 ;debug.c:204: byte hex[16]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
   0135 21 04 00            313 	ld	hl,#0x0004
   0138 39                  314 	add	hl,sp
   0139 4D                  315 	ld	c,l
   013A 44                  316 	ld	b,h
   013B 36 30               317 	ld	(hl),#0x30
   013D 69                  318 	ld	l,c
   013E 60                  319 	ld	h,b
   013F 23                  320 	inc	hl
   0140 36 31               321 	ld	(hl),#0x31
   0142 69                  322 	ld	l,c
   0143 60                  323 	ld	h,b
   0144 23                  324 	inc	hl
   0145 23                  325 	inc	hl
   0146 36 32               326 	ld	(hl),#0x32
   0148 69                  327 	ld	l,c
   0149 60                  328 	ld	h,b
   014A 23                  329 	inc	hl
   014B 23                  330 	inc	hl
   014C 23                  331 	inc	hl
   014D 36 33               332 	ld	(hl),#0x33
   014F 21 04 00            333 	ld	hl,#0x0004
   0152 09                  334 	add	hl,bc
   0153 36 34               335 	ld	(hl),#0x34
   0155 21 05 00            336 	ld	hl,#0x0005
   0158 09                  337 	add	hl,bc
   0159 36 35               338 	ld	(hl),#0x35
   015B 21 06 00            339 	ld	hl,#0x0006
   015E 09                  340 	add	hl,bc
   015F 36 36               341 	ld	(hl),#0x36
   0161 21 07 00            342 	ld	hl,#0x0007
   0164 09                  343 	add	hl,bc
   0165 36 37               344 	ld	(hl),#0x37
   0167 21 08 00            345 	ld	hl,#0x0008
   016A 09                  346 	add	hl,bc
   016B 36 38               347 	ld	(hl),#0x38
   016D 21 09 00            348 	ld	hl,#0x0009
   0170 09                  349 	add	hl,bc
   0171 36 39               350 	ld	(hl),#0x39
   0173 21 0A 00            351 	ld	hl,#0x000A
   0176 09                  352 	add	hl,bc
   0177 36 41               353 	ld	(hl),#0x41
   0179 21 0B 00            354 	ld	hl,#0x000B
   017C 09                  355 	add	hl,bc
   017D 36 42               356 	ld	(hl),#0x42
   017F 21 0C 00            357 	ld	hl,#0x000C
   0182 09                  358 	add	hl,bc
   0183 36 43               359 	ld	(hl),#0x43
   0185 21 0D 00            360 	ld	hl,#0x000D
   0188 09                  361 	add	hl,bc
   0189 36 44               362 	ld	(hl),#0x44
   018B 21 0E 00            363 	ld	hl,#0x000E
   018E 09                  364 	add	hl,bc
   018F 36 45               365 	ld	(hl),#0x45
   0191 21 0F 00            366 	ld	hl,#0x000F
   0194 09                  367 	add	hl,bc
   0195 36 46               368 	ld	(hl),#0x46
                            369 ;debug.c:206: p=(byte *)&w;
   0197 21 1A 00            370 	ld	hl,#0x001A
   019A 39                  371 	add	hl,sp
   019B DD 75 FE            372 	ld	-2 (ix),l
   019E DD 74 FF            373 	ld	-1 (ix),h
                            374 ;debug.c:208: for(i = 0; i < 2; i++)	{
   01A1 11 00 00            375 	ld	de,#0x0000
   01A4                     376 00101$:
   01A4 7B                  377 	ld	a,e
   01A5 D6 02               378 	sub	a, #0x02
   01A7 7A                  379 	ld	a,d
   01A8 DE 00               380 	sbc	a, #0x00
   01AA E2rAFs01            381 	jp	PO, 00110$
   01AD EE 80               382 	xor	a, #0x80
   01AF                     383 00110$:
   01AF F2r2Cs02            384 	jp	P,00104$
                            385 ;debug.c:209: destination[i*2] = hex[((p[1-i] >> 4) & 0x0F)];
   01B2 DD 73 EC            386 	ld	-20 (ix),e
   01B5 DD 72 ED            387 	ld	-19 (ix),d
   01B8 DD CB EC 26         388 	sla	-20 (ix)
   01BC DD CB ED 16         389 	rl	-19 (ix)
   01C0 E5                  390 	push	hl
   01C1 DD 6E 06            391 	ld	l,6 (ix)
   01C4 DD 66 07            392 	ld	h,7 (ix)
   01C7 E5                  393 	push	hl
   01C8 FD E1               394 	pop	iy
   01CA E1                  395 	pop	hl
   01CB C5                  396 	push	bc
   01CC DD 4E EC            397 	ld	c,-20 (ix)
   01CF DD 46 ED            398 	ld	b,-19 (ix)
   01D2 FD 09               399 	add	iy, bc
   01D4 C1                  400 	pop	bc
   01D5 3E 01               401 	ld	a,#0x01
   01D7 93                  402 	sub	a, e
   01D8 DD 77 EA            403 	ld	-22 (ix),a
   01DB 3E 00               404 	ld	a,#0x00
   01DD 9A                  405 	sbc	a, d
   01DE DD 77 EB            406 	ld	-21 (ix),a
   01E1 DD 7E FE            407 	ld	a,-2 (ix)
   01E4 DD 86 EA            408 	add	a, -22 (ix)
   01E7 6F                  409 	ld	l,a
   01E8 DD 7E FF            410 	ld	a,-1 (ix)
   01EB DD 8E EB            411 	adc	a, -21 (ix)
   01EE 67                  412 	ld	h,a
   01EF 7E                  413 	ld	a,(hl)
   01F0 DD 77 EA            414 	ld	-22 (ix), a
   01F3 CB 3F               415 	srl	a
   01F5 CB 3F               416 	srl	a
   01F7 CB 3F               417 	srl	a
   01F9 CB 3F               418 	srl	a
   01FB E6 0F               419 	and	a, #0x0F
   01FD 6F                  420 	ld	l, a
   01FE 26 00               421 	ld	h,#0x00
   0200 09                  422 	add	hl,bc
   0201 7E                  423 	ld	a,(hl)
   0202 FD 77 00            424 	ld	0 (iy), a
                            425 ;debug.c:210: destination[(i*2) + 1] = hex[(p[1-i]) & 0x0F];
   0205 E5                  426 	push	hl
   0206 DD 6E EC            427 	ld	l,-20 (ix)
   0209 DD 66 ED            428 	ld	h,-19 (ix)
   020C 23                  429 	inc	hl
   020D E5                  430 	push	hl
   020E FD E1               431 	pop	iy
   0210 E1                  432 	pop	hl
   0211 C5                  433 	push	bc
   0212 DD 4E 06            434 	ld	c,6 (ix)
   0215 DD 46 07            435 	ld	b,7 (ix)
   0218 FD 09               436 	add	iy, bc
   021A C1                  437 	pop	bc
   021B DD 7E EA            438 	ld	a,-22 (ix)
   021E E6 0F               439 	and	a, #0x0F
   0220 6F                  440 	ld	l, a
   0221 26 00               441 	ld	h,#0x00
   0223 09                  442 	add	hl,bc
   0224 7E                  443 	ld	a,(hl)
   0225 FD 77 00            444 	ld	0 (iy), a
                            445 ;debug.c:208: for(i = 0; i < 2; i++)	{
   0228 13                  446 	inc	de
   0229 C3rA4s01            447 	jp	00101$
   022C                     448 00104$:
                            449 ;debug.c:212: destination[i*2]=0;
   022C CB 23               450 	sla	e
   022E CB 12               451 	rl	d
   0230 7B                  452 	ld	a,e
   0231 DD 86 06            453 	add	a, 6 (ix)
   0234 5F                  454 	ld	e,a
   0235 7A                  455 	ld	a,d
   0236 DD 8E 07            456 	adc	a, 7 (ix)
   0239 57                  457 	ld	d,a
   023A 3E 00               458 	ld	a,#0x00
   023C 12                  459 	ld	(de),a
   023D DD F9               460 	ld	sp,ix
   023F DD E1               461 	pop	ix
   0241 C9                  462 	ret
   0242                     463 _dbg_wtox_end::
                            464 ;debug.c:215: void dbg_memdump() {
                            465 ;	---------------------------------
                            466 ; Function dbg_memdump
                            467 ; ---------------------------------
   0242                     468 _dbg_memdump_start::
   0242                     469 _dbg_memdump:
   0242 DD E5               470 	push	ix
   0244 DD 21 00 00         471 	ld	ix,#0
   0248 DD 39               472 	add	ix,sp
   024A 21 E4 FF            473 	ld	hl,#-28
   024D 39                  474 	add	hl,sp
   024E F9                  475 	ld	sp,hl
                            476 ;debug.c:220: buff[0]=0;
   024F 21 16 00            477 	ld	hl,#0x0016
   0252 39                  478 	add	hl,sp
   0253 EB                  479 	ex	de,hl
   0254 3E 00               480 	ld	a,#0x00
   0256 12                  481 	ld	(de),a
                            482 ;debug.c:222: dbg_say("MEMORY DUMP:\n");
   0257 21r53s04            483 	ld	hl,#__str_0
   025A D5                  484 	push	de
   025B E5                  485 	push	hl
   025C CDrA5s00            486 	call	_dbg_say
   025F F1                  487 	pop	af
   0260 D1                  488 	pop	de
                            489 ;debug.c:224: dbg_say("first last break\n");
   0261 21r61s04            490 	ld	hl,#__str_1
   0264 D5                  491 	push	de
   0265 E5                  492 	push	hl
   0266 CDrA5s00            493 	call	_dbg_say
   0269 F1                  494 	pop	af
   026A D1                  495 	pop	de
                            496 ;debug.c:225: dbg_say("===== ==== =====\n");
   026B 21r73s04            497 	ld	hl,#__str_2
   026E D5                  498 	push	de
   026F E5                  499 	push	hl
   0270 CDrA5s00            500 	call	_dbg_say
   0273 F1                  501 	pop	af
   0274 D1                  502 	pop	de
                            503 ;debug.c:226: dbg_wtox((word)mem_first,buff);
   0275 4B                  504 	ld	c,e
   0276 42                  505 	ld	b,d
   0277 FD 2Ar00s00         506 	ld	iy,(_mem_first)
   027B D5                  507 	push	de
   027C C5                  508 	push	bc
   027D FD E5               509 	push	iy
   027F CDr28s01            510 	call	_dbg_wtox
   0282 F1                  511 	pop	af
   0283 F1                  512 	pop	af
   0284 D1                  513 	pop	de
                            514 ;debug.c:227: dbg_say(" "); dbg_say(buff); dbg_say(" ");
   0285 21r85s04            515 	ld	hl,#__str_3
   0288 D5                  516 	push	de
   0289 E5                  517 	push	hl
   028A CDrA5s00            518 	call	_dbg_say
   028D F1                  519 	pop	af
   028E D1                  520 	pop	de
   028F 6B                  521 	ld	l,e
   0290 62                  522 	ld	h,d
   0291 D5                  523 	push	de
   0292 E5                  524 	push	hl
   0293 CDrA5s00            525 	call	_dbg_say
   0296 F1                  526 	pop	af
   0297 D1                  527 	pop	de
   0298 21r85s04            528 	ld	hl,#__str_3
   029B D5                  529 	push	de
   029C E5                  530 	push	hl
   029D CDrA5s00            531 	call	_dbg_say
   02A0 F1                  532 	pop	af
   02A1 D1                  533 	pop	de
                            534 ;debug.c:228: dbg_wtox((word)mem_last,buff);
   02A2 4B                  535 	ld	c,e
   02A3 42                  536 	ld	b,d
   02A4 FD 2Ar00s00         537 	ld	iy,(_mem_last)
   02A8 D5                  538 	push	de
   02A9 C5                  539 	push	bc
   02AA FD E5               540 	push	iy
   02AC CDr28s01            541 	call	_dbg_wtox
   02AF F1                  542 	pop	af
   02B0 F1                  543 	pop	af
   02B1 D1                  544 	pop	de
                            545 ;debug.c:229: dbg_say(buff); dbg_say(" ");
   02B2 6B                  546 	ld	l,e
   02B3 62                  547 	ld	h,d
   02B4 D5                  548 	push	de
   02B5 E5                  549 	push	hl
   02B6 CDrA5s00            550 	call	_dbg_say
   02B9 F1                  551 	pop	af
   02BA D1                  552 	pop	de
   02BB 21r85s04            553 	ld	hl,#__str_3
   02BE D5                  554 	push	de
   02BF E5                  555 	push	hl
   02C0 CDrA5s00            556 	call	_dbg_say
   02C3 F1                  557 	pop	af
   02C4 D1                  558 	pop	de
                            559 ;debug.c:230: dbg_wtox((word)brk_addr,buff);
   02C5 6B                  560 	ld	l,e
   02C6 62                  561 	ld	h,d
   02C7 D5                  562 	push	de
   02C8 E5                  563 	push	hl
   02C9 2Ar00s00            564 	ld	hl,(_brk_addr)
   02CC E5                  565 	push	hl
   02CD CDr28s01            566 	call	_dbg_wtox
   02D0 F1                  567 	pop	af
   02D1 F1                  568 	pop	af
   02D2 D1                  569 	pop	de
                            570 ;debug.c:231: dbg_say(" "); dbg_say(buff); dbg_say("\n");
   02D3 21r85s04            571 	ld	hl,#__str_3
   02D6 D5                  572 	push	de
   02D7 E5                  573 	push	hl
   02D8 CDrA5s00            574 	call	_dbg_say
   02DB F1                  575 	pop	af
   02DC D1                  576 	pop	de
   02DD 6B                  577 	ld	l,e
   02DE 62                  578 	ld	h,d
   02DF D5                  579 	push	de
   02E0 E5                  580 	push	hl
   02E1 CDrA5s00            581 	call	_dbg_say
   02E4 F1                  582 	pop	af
   02E5 D1                  583 	pop	de
   02E6 21r87s04            584 	ld	hl,#__str_4
   02E9 D5                  585 	push	de
   02EA E5                  586 	push	hl
   02EB CDrA5s00            587 	call	_dbg_say
   02EE F1                  588 	pop	af
   02EF D1                  589 	pop	de
                            590 ;debug.c:234: dbg_say("block owner size next prev\n");
   02F0 21r89s04            591 	ld	hl,#__str_5
   02F3 D5                  592 	push	de
   02F4 E5                  593 	push	hl
   02F5 CDrA5s00            594 	call	_dbg_say
   02F8 F1                  595 	pop	af
   02F9 D1                  596 	pop	de
                            597 ;debug.c:235: dbg_say("===== ===== ==== ==== ====\n");
   02FA 21rA5s04            598 	ld	hl,#__str_6
   02FD D5                  599 	push	de
   02FE E5                  600 	push	hl
   02FF CDrA5s00            601 	call	_dbg_say
   0302 F1                  602 	pop	af
   0303 D1                  603 	pop	de
                            604 ;debug.c:237: b=mem_first;
   0304 ED 4Br00s00         605 	ld	bc,(_mem_first)
                            606 ;debug.c:238: while (b) {
   0308 DD 73 F8            607 	ld	-8 (ix),e
   030B DD 72 F9            608 	ld	-7 (ix),d
   030E DD 73 F6            609 	ld	-10 (ix),e
   0311 DD 72 F7            610 	ld	-9 (ix),d
   0314 DD 73 F4            611 	ld	-12 (ix),e
   0317 DD 72 F5            612 	ld	-11 (ix),d
   031A DD 73 F2            613 	ld	-14 (ix),e
   031D DD 72 F3            614 	ld	-13 (ix),d
   0320 DD 73 F0            615 	ld	-16 (ix),e
   0323 DD 72 F1            616 	ld	-15 (ix),d
   0326 DD 73 EE            617 	ld	-18 (ix),e
   0329 DD 72 EF            618 	ld	-17 (ix),d
   032C DD 73 EC            619 	ld	-20 (ix),e
   032F DD 72 ED            620 	ld	-19 (ix),d
   0332 DD 73 EA            621 	ld	-22 (ix),e
   0335 DD 72 EB            622 	ld	-21 (ix),d
   0338 DD 73 E8            623 	ld	-24 (ix),e
   033B DD 72 E9            624 	ld	-23 (ix),d
   033E DD 73 E6            625 	ld	-26 (ix),e
   0341 DD 72 E7            626 	ld	-25 (ix),d
   0344                     627 00101$:
   0344 78                  628 	ld	a,b
   0345 B1                  629 	or	a,c
   0346 CAr4Es04            630 	jp	Z,00104$
                            631 ;debug.c:240: dbg_wtox((word)b,buff);
   0349 DD 6E F8            632 	ld	l,-8 (ix)
   034C DD 66 F9            633 	ld	h,-7 (ix)
   034F 59                  634 	ld	e,c
   0350 50                  635 	ld	d,b
   0351 C5                  636 	push	bc
   0352 E5                  637 	push	hl
   0353 D5                  638 	push	de
   0354 CDr28s01            639 	call	_dbg_wtox
   0357 F1                  640 	pop	af
   0358 F1                  641 	pop	af
   0359 C1                  642 	pop	bc
                            643 ;debug.c:241: dbg_say(" "); dbg_say(buff); dbg_say(" ");
   035A 21r85s04            644 	ld	hl,#__str_3
   035D C5                  645 	push	bc
   035E E5                  646 	push	hl
   035F CDrA5s00            647 	call	_dbg_say
   0362 F1                  648 	pop	af
   0363 C1                  649 	pop	bc
   0364 DD 6E F6            650 	ld	l,-10 (ix)
   0367 DD 66 F7            651 	ld	h,-9 (ix)
   036A C5                  652 	push	bc
   036B E5                  653 	push	hl
   036C CDrA5s00            654 	call	_dbg_say
   036F F1                  655 	pop	af
   0370 C1                  656 	pop	bc
   0371 21r85s04            657 	ld	hl,#__str_3
   0374 C5                  658 	push	bc
   0375 E5                  659 	push	hl
   0376 CDrA5s00            660 	call	_dbg_say
   0379 F1                  661 	pop	af
   037A C1                  662 	pop	bc
                            663 ;debug.c:242: dbg_wtox((word)b->owner,buff);
   037B DD 5E F4            664 	ld	e,-12 (ix)
   037E DD 56 F5            665 	ld	d,-11 (ix)
   0381 D5                  666 	push	de
   0382 FD E1               667 	pop	iy
   0384 69                  668 	ld	l,c
   0385 60                  669 	ld	h,b
   0386 5E                  670 	ld	e,(hl)
   0387 23                  671 	inc	hl
   0388 56                  672 	ld	d,(hl)
   0389 C5                  673 	push	bc
   038A FD E5               674 	push	iy
   038C D5                  675 	push	de
   038D CDr28s01            676 	call	_dbg_wtox
   0390 F1                  677 	pop	af
   0391 F1                  678 	pop	af
   0392 C1                  679 	pop	bc
                            680 ;debug.c:243: dbg_say(" "); dbg_say(buff); dbg_say(" ");
   0393 21r85s04            681 	ld	hl,#__str_3
   0396 C5                  682 	push	bc
   0397 E5                  683 	push	hl
   0398 CDrA5s00            684 	call	_dbg_say
   039B F1                  685 	pop	af
   039C C1                  686 	pop	bc
   039D DD 6E F2            687 	ld	l,-14 (ix)
   03A0 DD 66 F3            688 	ld	h,-13 (ix)
   03A3 C5                  689 	push	bc
   03A4 E5                  690 	push	hl
   03A5 CDrA5s00            691 	call	_dbg_say
   03A8 F1                  692 	pop	af
   03A9 C1                  693 	pop	bc
   03AA 21r85s04            694 	ld	hl,#__str_3
   03AD C5                  695 	push	bc
   03AE E5                  696 	push	hl
   03AF CDrA5s00            697 	call	_dbg_say
   03B2 F1                  698 	pop	af
   03B3 C1                  699 	pop	bc
                            700 ;debug.c:244: dbg_wtox(b->size,buff);
   03B4 DD 5E F0            701 	ld	e,-16 (ix)
   03B7 DD 56 F1            702 	ld	d,-15 (ix)
   03BA D5                  703 	push	de
   03BB FD E1               704 	pop	iy
   03BD 69                  705 	ld	l,c
   03BE 60                  706 	ld	h,b
   03BF 23                  707 	inc	hl
   03C0 23                  708 	inc	hl
   03C1 5E                  709 	ld	e,(hl)
   03C2 23                  710 	inc	hl
   03C3 56                  711 	ld	d,(hl)
   03C4 C5                  712 	push	bc
   03C5 FD E5               713 	push	iy
   03C7 D5                  714 	push	de
   03C8 CDr28s01            715 	call	_dbg_wtox
   03CB F1                  716 	pop	af
   03CC F1                  717 	pop	af
   03CD C1                  718 	pop	bc
                            719 ;debug.c:245: dbg_say(buff); dbg_say(" ");
   03CE DD 6E EE            720 	ld	l,-18 (ix)
   03D1 DD 66 EF            721 	ld	h,-17 (ix)
   03D4 C5                  722 	push	bc
   03D5 E5                  723 	push	hl
   03D6 CDrA5s00            724 	call	_dbg_say
   03D9 F1                  725 	pop	af
   03DA C1                  726 	pop	bc
   03DB 21r85s04            727 	ld	hl,#__str_3
   03DE C5                  728 	push	bc
   03DF E5                  729 	push	hl
   03E0 CDrA5s00            730 	call	_dbg_say
   03E3 F1                  731 	pop	af
   03E4 C1                  732 	pop	bc
                            733 ;debug.c:246: dbg_wtox((word)b->next,buff);
   03E5 DD 5E EC            734 	ld	e,-20 (ix)
   03E8 DD 56 ED            735 	ld	d,-19 (ix)
   03EB D5                  736 	push	de
   03EC FD E1               737 	pop	iy
   03EE 21 04 00            738 	ld	hl,#0x0004
   03F1 09                  739 	add	hl,bc
   03F2 DD 75 E4            740 	ld	-28 (ix),l
   03F5 DD 74 E5            741 	ld	-27 (ix),h
   03F8 5E                  742 	ld	e,(hl)
   03F9 23                  743 	inc	hl
   03FA 56                  744 	ld	d,(hl)
   03FB C5                  745 	push	bc
   03FC FD E5               746 	push	iy
   03FE D5                  747 	push	de
   03FF CDr28s01            748 	call	_dbg_wtox
   0402 F1                  749 	pop	af
   0403 F1                  750 	pop	af
   0404 C1                  751 	pop	bc
                            752 ;debug.c:247: dbg_say(buff); dbg_say(" ");
   0405 DD 6E EA            753 	ld	l,-22 (ix)
   0408 DD 66 EB            754 	ld	h,-21 (ix)
   040B C5                  755 	push	bc
   040C E5                  756 	push	hl
   040D CDrA5s00            757 	call	_dbg_say
   0410 F1                  758 	pop	af
   0411 C1                  759 	pop	bc
   0412 21r85s04            760 	ld	hl,#__str_3
   0415 C5                  761 	push	bc
   0416 E5                  762 	push	hl
   0417 CDrA5s00            763 	call	_dbg_say
   041A F1                  764 	pop	af
   041B C1                  765 	pop	bc
                            766 ;debug.c:248: dbg_wtox((word)b->prev,buff);
   041C DD 5E E8            767 	ld	e,-24 (ix)
   041F DD 56 E9            768 	ld	d,-23 (ix)
   0422 21 06 00            769 	ld	hl,#0x0006
   0425 09                  770 	add	hl,bc
   0426 4E                  771 	ld	c,(hl)
   0427 23                  772 	inc	hl
   0428 46                  773 	ld	b,(hl)
   0429 D5                  774 	push	de
   042A C5                  775 	push	bc
   042B CDr28s01            776 	call	_dbg_wtox
   042E F1                  777 	pop	af
   042F F1                  778 	pop	af
                            779 ;debug.c:249: dbg_say(buff); dbg_say("\n");
   0430 DD 6E E6            780 	ld	l,-26 (ix)
   0433 DD 66 E7            781 	ld	h,-25 (ix)
   0436 E5                  782 	push	hl
   0437 CDrA5s00            783 	call	_dbg_say
   043A 21r87s04            784 	ld	hl, #__str_4
   043D E3                  785 	ex	(sp),hl
   043E CDrA5s00            786 	call	_dbg_say
   0441 F1                  787 	pop	af
                            788 ;debug.c:250: b=b->next;
   0442 DD 6E E4            789 	ld	l,-28 (ix)
   0445 DD 66 E5            790 	ld	h,-27 (ix)
   0448 4E                  791 	ld	c,(hl)
   0449 23                  792 	inc	hl
   044A 46                  793 	ld	b,(hl)
   044B C3r44s03            794 	jp	00101$
   044E                     795 00104$:
   044E DD F9               796 	ld	sp,ix
   0450 DD E1               797 	pop	ix
   0452 C9                  798 	ret
   0453                     799 _dbg_memdump_end::
   0453                     800 __str_0:
   0453 4D 45 4D 4F 52 59   801 	.ascii "MEMORY DUMP:"
        20 44 55 4D 50 3A
   045F 0A                  802 	.db 0x0A
   0460 00                  803 	.db 0x00
   0461                     804 __str_1:
   0461 66 69 72 73 74 20   805 	.ascii "first last break"
        6C 61 73 74 20 62
        72 65 61 6B
   0471 0A                  806 	.db 0x0A
   0472 00                  807 	.db 0x00
   0473                     808 __str_2:
   0473 3D 3D 3D 3D 3D 20   809 	.ascii "===== ==== ====="
        3D 3D 3D 3D 20 3D
        3D 3D 3D 3D
   0483 0A                  810 	.db 0x0A
   0484 00                  811 	.db 0x00
   0485                     812 __str_3:
   0485 20                  813 	.ascii " "
   0486 00                  814 	.db 0x00
   0487                     815 __str_4:
   0487 0A                  816 	.db 0x0A
   0488 00                  817 	.db 0x00
   0489                     818 __str_5:
   0489 62 6C 6F 63 6B 20   819 	.ascii "block owner size next prev"
        6F 77 6E 65 72 20
        73 69 7A 65 20 6E
        65 78 74 20 70 72
        65 76
   04A3 0A                  820 	.db 0x0A
   04A4 00                  821 	.db 0x00
   04A5                     822 __str_6:
   04A5 3D 3D 3D 3D 3D 20   823 	.ascii "===== ===== ==== ==== ===="
        3D 3D 3D 3D 3D 20
        3D 3D 3D 3D 20 3D
        3D 3D 3D 20 3D 3D
        3D 3D
   04BF 0A                  824 	.db 0x0A
   04C0 00                  825 	.db 0x00
                            826 ;debug.c:255: void dbg_taskdump() {
                            827 ;	---------------------------------
                            828 ; Function dbg_taskdump
                            829 ; ---------------------------------
   04C1                     830 _dbg_taskdump_start::
   04C1                     831 _dbg_taskdump:
   04C1 DD E5               832 	push	ix
   04C3 DD 21 00 00         833 	ld	ix,#0
   04C7 DD 39               834 	add	ix,sp
   04C9 21 EC FF            835 	ld	hl,#-20
   04CC 39                  836 	add	hl,sp
   04CD F9                  837 	ld	sp,hl
                            838 ;debug.c:259: buff[0]=0;
   04CE 21 0E 00            839 	ld	hl,#0x000E
   04D1 39                  840 	add	hl,sp
   04D2 EB                  841 	ex	de,hl
   04D3 3E 00               842 	ld	a,#0x00
   04D5 12                  843 	ld	(de),a
                            844 ;debug.c:261: dbg_say("TASKS:\n");
   04D6 21rE7s05            845 	ld	hl,#__str_7
   04D9 D5                  846 	push	de
   04DA E5                  847 	push	hl
   04DB CDrA5s00            848 	call	_dbg_say
   04DE F1                  849 	pop	af
   04DF D1                  850 	pop	de
                            851 ;debug.c:262: dbg_say("task next stck state \n");
   04E0 21rEFs05            852 	ld	hl,#__str_8
   04E3 D5                  853 	push	de
   04E4 E5                  854 	push	hl
   04E5 CDrA5s00            855 	call	_dbg_say
   04E8 F1                  856 	pop	af
   04E9 D1                  857 	pop	de
                            858 ;debug.c:263: dbg_say("==== ==== ==== ======= \n");
   04EA 21r06s06            859 	ld	hl,#__str_9
   04ED D5                  860 	push	de
   04EE E5                  861 	push	hl
   04EF CDrA5s00            862 	call	_dbg_say
   04F2 F1                  863 	pop	af
   04F3 D1                  864 	pop	de
                            865 ;debug.c:265: t=tsk_first_running;
   04F4 FD 21r00s00         866 	ld	iy,#_tsk_first_running
   04F8 FD 7E 00            867 	ld	a,0 (iy)
   04FB DD 77 F8            868 	ld	-8 (ix),a
   04FE FD 7E 01            869 	ld	a,1 (iy)
   0501 DD 77 F9            870 	ld	-7 (ix),a
                            871 ;debug.c:266: while (t) {
   0504 DD 73 F6            872 	ld	-10 (ix),e
   0507 DD 72 F7            873 	ld	-9 (ix),d
   050A DD 73 F4            874 	ld	-12 (ix),e
   050D DD 72 F5            875 	ld	-11 (ix),d
   0510 DD 73 F2            876 	ld	-14 (ix),e
   0513 DD 72 F3            877 	ld	-13 (ix),d
   0516 DD 73 F0            878 	ld	-16 (ix),e
   0519 DD 72 F1            879 	ld	-15 (ix),d
   051C DD 73 EE            880 	ld	-18 (ix),e
   051F DD 72 EF            881 	ld	-17 (ix),d
   0522 DD 73 EC            882 	ld	-20 (ix),e
   0525 DD 72 ED            883 	ld	-19 (ix),d
   0528                     884 00104$:
   0528 DD 7E F9            885 	ld	a,-7 (ix)
   052B DD B6 F8            886 	or	a,-8 (ix)
   052E CArE2s05            887 	jp	Z,00107$
                            888 ;debug.c:268: dbg_wtox((word)t,buff);
   0531 DD 6E F6            889 	ld	l,-10 (ix)
   0534 DD 66 F7            890 	ld	h,-9 (ix)
   0537 DD 5E F8            891 	ld	e,-8 (ix)
   053A DD 56 F9            892 	ld	d,-7 (ix)
   053D E5                  893 	push	hl
   053E D5                  894 	push	de
   053F CDr28s01            895 	call	_dbg_wtox
   0542 F1                  896 	pop	af
   0543 F1                  897 	pop	af
                            898 ;debug.c:269: dbg_say(buff); dbg_say(" ");
   0544 DD 6E F4            899 	ld	l,-12 (ix)
   0547 DD 66 F5            900 	ld	h,-11 (ix)
   054A E5                  901 	push	hl
   054B CDrA5s00            902 	call	_dbg_say
   054E 21r1Fs06            903 	ld	hl, #__str_10
   0551 E3                  904 	ex	(sp),hl
   0552 CDrA5s00            905 	call	_dbg_say
   0555 F1                  906 	pop	af
                            907 ;debug.c:270: dbg_wtox((word)t->next,buff);
   0556 DD 4E F2            908 	ld	c,-14 (ix)
   0559 DD 46 F3            909 	ld	b,-13 (ix)
   055C DD 6E F8            910 	ld	l,-8 (ix)
   055F DD 66 F9            911 	ld	h,-7 (ix)
   0562 5E                  912 	ld	e,(hl)
   0563 23                  913 	inc	hl
   0564 56                  914 	ld	d,(hl)
   0565 C5                  915 	push	bc
   0566 D5                  916 	push	de
   0567 CDr28s01            917 	call	_dbg_wtox
   056A F1                  918 	pop	af
   056B F1                  919 	pop	af
                            920 ;debug.c:271: dbg_say(buff); dbg_say(" ");
   056C DD 6E F0            921 	ld	l,-16 (ix)
   056F DD 66 F1            922 	ld	h,-15 (ix)
   0572 E5                  923 	push	hl
   0573 CDrA5s00            924 	call	_dbg_say
   0576 21r1Fs06            925 	ld	hl, #__str_10
   0579 E3                  926 	ex	(sp),hl
   057A CDrA5s00            927 	call	_dbg_say
   057D F1                  928 	pop	af
                            929 ;debug.c:272: dbg_wtox((word)t->sp,buff);
   057E DD 4E EE            930 	ld	c,-18 (ix)
   0581 DD 46 EF            931 	ld	b,-17 (ix)
   0584 DD 7E F8            932 	ld	a,-8 (ix)
   0587 C6 04               933 	add	a, #0x04
   0589 6F                  934 	ld	l,a
   058A DD 7E F9            935 	ld	a,-7 (ix)
   058D CE 00               936 	adc	a, #0x00
   058F 67                  937 	ld	h,a
   0590 5E                  938 	ld	e,(hl)
   0591 23                  939 	inc	hl
   0592 56                  940 	ld	d,(hl)
   0593 C5                  941 	push	bc
   0594 D5                  942 	push	de
   0595 CDr28s01            943 	call	_dbg_wtox
   0598 F1                  944 	pop	af
   0599 F1                  945 	pop	af
                            946 ;debug.c:273: dbg_say(buff); dbg_say(" ");
   059A DD 6E EC            947 	ld	l,-20 (ix)
   059D DD 66 ED            948 	ld	h,-19 (ix)
   05A0 E5                  949 	push	hl
   05A1 CDrA5s00            950 	call	_dbg_say
   05A4 21r1Fs06            951 	ld	hl, #__str_10
   05A7 E3                  952 	ex	(sp),hl
   05A8 CDrA5s00            953 	call	_dbg_say
   05AB F1                  954 	pop	af
                            955 ;debug.c:274: if (t->state == TASK_STATE_RUNNING)
   05AC FD 21 09 00         956 	ld	iy,#0x0009
   05B0 DD 5E F8            957 	ld	e,-8 (ix)
   05B3 DD 56 F9            958 	ld	d,-7 (ix)
   05B6 FD 19               959 	add	iy, de
   05B8 FD 7E 00            960 	ld	a, 0 (iy)
   05BB B7                  961 	or	a, a
   05BC 20 0A               962 	jr	NZ,00102$
                            963 ;debug.c:275: dbg_say("running\n");
   05BE 21r21s06            964 	ld	hl,#__str_11
   05C1 E5                  965 	push	hl
   05C2 CDrA5s00            966 	call	_dbg_say
   05C5 F1                  967 	pop	af
   05C6 18 08               968 	jr	00103$
   05C8                     969 00102$:
                            970 ;debug.c:277: dbg_say("waiting\n");
   05C8 21r2As06            971 	ld	hl,#__str_12
   05CB E5                  972 	push	hl
   05CC CDrA5s00            973 	call	_dbg_say
   05CF F1                  974 	pop	af
   05D0                     975 00103$:
                            976 ;debug.c:279: t=t->next;
   05D0 DD 6E F8            977 	ld	l,-8 (ix)
   05D3 DD 66 F9            978 	ld	h,-7 (ix)
   05D6 7E                  979 	ld	a,(hl)
   05D7 DD 77 F8            980 	ld	-8 (ix),a
   05DA 23                  981 	inc	hl
   05DB 7E                  982 	ld	a,(hl)
   05DC DD 77 F9            983 	ld	-7 (ix),a
   05DF C3r28s05            984 	jp	00104$
   05E2                     985 00107$:
   05E2 DD F9               986 	ld	sp,ix
   05E4 DD E1               987 	pop	ix
   05E6 C9                  988 	ret
   05E7                     989 _dbg_taskdump_end::
   05E7                     990 __str_7:
   05E7 54 41 53 4B 53 3A   991 	.ascii "TASKS:"
   05ED 0A                  992 	.db 0x0A
   05EE 00                  993 	.db 0x00
   05EF                     994 __str_8:
   05EF 74 61 73 6B 20 6E   995 	.ascii "task next stck state "
        65 78 74 20 73 74
        63 6B 20 73 74 61
        74 65 20
   0604 0A                  996 	.db 0x0A
   0605 00                  997 	.db 0x00
   0606                     998 __str_9:
   0606 3D 3D 3D 3D 20 3D   999 	.ascii "==== ==== ==== ======= "
        3D 3D 3D 20 3D 3D
        3D 3D 20 3D 3D 3D
        3D 3D 3D 3D 20
   061D 0A                 1000 	.db 0x0A
   061E 00                 1001 	.db 0x00
   061F                    1002 __str_10:
   061F 20                 1003 	.ascii " "
   0620 00                 1004 	.db 0x00
   0621                    1005 __str_11:
   0621 72 75 6E 6E 69 6E  1006 	.ascii "running"
        67
   0628 0A                 1007 	.db 0x0A
   0629 00                 1008 	.db 0x00
   062A                    1009 __str_12:
   062A 77 61 69 74 69 6E  1010 	.ascii "waiting"
        67
   0631 0A                 1011 	.db 0x0A
   0632 00                 1012 	.db 0x00
                           1013 ;debug.c:283: void dbg_timerdump() {
                           1014 ;	---------------------------------
                           1015 ; Function dbg_timerdump
                           1016 ; ---------------------------------
   0633                    1017 _dbg_timerdump_start::
   0633                    1018 _dbg_timerdump:
   0633 DD E5              1019 	push	ix
   0635 DD 21 00 00        1020 	ld	ix,#0
   0639 DD 39              1021 	add	ix,sp
   063B 21 EA FF           1022 	ld	hl,#-22
   063E 39                 1023 	add	hl,sp
   063F F9                 1024 	ld	sp,hl
                           1025 ;debug.c:287: buff[0]=0;
   0640 21 10 00           1026 	ld	hl,#0x0010
   0643 39                 1027 	add	hl,sp
   0644 4D                 1028 	ld	c,l
   0645 44                 1029 	ld	b,h
   0646 36 00              1030 	ld	(hl),#0x00
                           1031 ;debug.c:289: dbg_say("TIMERS:\n");
   0648 21r6Ds07           1032 	ld	hl,#__str_13
   064B C5                 1033 	push	bc
   064C E5                 1034 	push	hl
   064D CDrA5s00           1035 	call	_dbg_say
   0650 F1                 1036 	pop	af
   0651 C1                 1037 	pop	bc
                           1038 ;debug.c:290: dbg_say("timer tick tc   next\n");
   0652 21r76s07           1039 	ld	hl,#__str_14
   0655 C5                 1040 	push	bc
   0656 E5                 1041 	push	hl
   0657 CDrA5s00           1042 	call	_dbg_say
   065A F1                 1043 	pop	af
   065B C1                 1044 	pop	bc
                           1045 ;debug.c:291: dbg_say("===== ==== ==== ====\n");
   065C 21r8Cs07           1046 	ld	hl,#__str_15
   065F C5                 1047 	push	bc
   0660 E5                 1048 	push	hl
   0661 CDrA5s00           1049 	call	_dbg_say
   0664 F1                 1050 	pop	af
   0665 C1                 1051 	pop	bc
                           1052 ;debug.c:293: tmr=tmr_first;
   0666 ED 5Br00s00        1053 	ld	de,(_tmr_first)
                           1054 ;debug.c:294: while (tmr) {
   066A DD 71 F8           1055 	ld	-8 (ix),c
   066D DD 70 F9           1056 	ld	-7 (ix),b
   0670 DD 71 F6           1057 	ld	-10 (ix),c
   0673 DD 70 F7           1058 	ld	-9 (ix),b
   0676 DD 71 F4           1059 	ld	-12 (ix),c
   0679 DD 70 F5           1060 	ld	-11 (ix),b
   067C DD 71 F2           1061 	ld	-14 (ix),c
   067F DD 70 F3           1062 	ld	-13 (ix),b
   0682 DD 71 F0           1063 	ld	-16 (ix),c
   0685 DD 70 F1           1064 	ld	-15 (ix),b
   0688 DD 71 EE           1065 	ld	-18 (ix),c
   068B DD 70 EF           1066 	ld	-17 (ix),b
   068E DD 71 EC           1067 	ld	-20 (ix),c
   0691 DD 70 ED           1068 	ld	-19 (ix),b
   0694 DD 71 EA           1069 	ld	-22 (ix),c
   0697 DD 70 EB           1070 	ld	-21 (ix),b
   069A                    1071 00101$:
   069A 7A                 1072 	ld	a,d
   069B B3                 1073 	or	a,e
   069C CAr68s07           1074 	jp	Z,00104$
                           1075 ;debug.c:296: dbg_wtox((word)tmr,buff);
   069F DD 6E F8           1076 	ld	l,-8 (ix)
   06A2 DD 66 F9           1077 	ld	h,-7 (ix)
   06A5 4B                 1078 	ld	c,e
   06A6 42                 1079 	ld	b,d
   06A7 D5                 1080 	push	de
   06A8 E5                 1081 	push	hl
   06A9 C5                 1082 	push	bc
   06AA CDr28s01           1083 	call	_dbg_wtox
   06AD F1                 1084 	pop	af
   06AE F1                 1085 	pop	af
   06AF D1                 1086 	pop	de
                           1087 ;debug.c:297: dbg_say(" "); dbg_say(buff); dbg_say(" ");
   06B0 21rA2s07           1088 	ld	hl,#__str_16
   06B3 D5                 1089 	push	de
   06B4 E5                 1090 	push	hl
   06B5 CDrA5s00           1091 	call	_dbg_say
   06B8 F1                 1092 	pop	af
   06B9 D1                 1093 	pop	de
   06BA DD 6E F6           1094 	ld	l,-10 (ix)
   06BD DD 66 F7           1095 	ld	h,-9 (ix)
   06C0 D5                 1096 	push	de
   06C1 E5                 1097 	push	hl
   06C2 CDrA5s00           1098 	call	_dbg_say
   06C5 F1                 1099 	pop	af
   06C6 D1                 1100 	pop	de
   06C7 21rA2s07           1101 	ld	hl,#__str_16
   06CA D5                 1102 	push	de
   06CB E5                 1103 	push	hl
   06CC CDrA5s00           1104 	call	_dbg_say
   06CF F1                 1105 	pop	af
   06D0 D1                 1106 	pop	de
                           1107 ;debug.c:298: dbg_wtox((word)tmr->ticks,buff);
   06D1 DD 4E F4           1108 	ld	c,-12 (ix)
   06D4 DD 46 F5           1109 	ld	b,-11 (ix)
   06D7 C5                 1110 	push	bc
   06D8 FD E1              1111 	pop	iy
   06DA 21 06 00           1112 	ld	hl,#0x0006
   06DD 19                 1113 	add	hl,de
   06DE 4E                 1114 	ld	c,(hl)
   06DF 23                 1115 	inc	hl
   06E0 46                 1116 	ld	b,(hl)
   06E1 D5                 1117 	push	de
   06E2 FD E5              1118 	push	iy
   06E4 C5                 1119 	push	bc
   06E5 CDr28s01           1120 	call	_dbg_wtox
   06E8 F1                 1121 	pop	af
   06E9 F1                 1122 	pop	af
   06EA D1                 1123 	pop	de
                           1124 ;debug.c:299: dbg_say(buff); dbg_say(" ");
   06EB DD 6E F2           1125 	ld	l,-14 (ix)
   06EE DD 66 F3           1126 	ld	h,-13 (ix)
   06F1 D5                 1127 	push	de
   06F2 E5                 1128 	push	hl
   06F3 CDrA5s00           1129 	call	_dbg_say
   06F6 F1                 1130 	pop	af
   06F7 D1                 1131 	pop	de
   06F8 21rA2s07           1132 	ld	hl,#__str_16
   06FB D5                 1133 	push	de
   06FC E5                 1134 	push	hl
   06FD CDrA5s00           1135 	call	_dbg_say
   0700 F1                 1136 	pop	af
   0701 D1                 1137 	pop	de
                           1138 ;debug.c:300: dbg_wtox((word)tmr->_tick_count,buff);
   0702 DD 4E F0           1139 	ld	c,-16 (ix)
   0705 DD 46 F1           1140 	ld	b,-15 (ix)
   0708 C5                 1141 	push	bc
   0709 FD E1              1142 	pop	iy
   070B 21 08 00           1143 	ld	hl,#0x0008
   070E 19                 1144 	add	hl,de
   070F 4E                 1145 	ld	c,(hl)
   0710 23                 1146 	inc	hl
   0711 46                 1147 	ld	b,(hl)
   0712 D5                 1148 	push	de
   0713 FD E5              1149 	push	iy
   0715 C5                 1150 	push	bc
   0716 CDr28s01           1151 	call	_dbg_wtox
   0719 F1                 1152 	pop	af
   071A F1                 1153 	pop	af
   071B D1                 1154 	pop	de
                           1155 ;debug.c:301: dbg_say(buff); dbg_say(" ");
   071C DD 6E EE           1156 	ld	l,-18 (ix)
   071F DD 66 EF           1157 	ld	h,-17 (ix)
   0722 D5                 1158 	push	de
   0723 E5                 1159 	push	hl
   0724 CDrA5s00           1160 	call	_dbg_say
   0727 F1                 1161 	pop	af
   0728 D1                 1162 	pop	de
   0729 21rA2s07           1163 	ld	hl,#__str_16
   072C D5                 1164 	push	de
   072D E5                 1165 	push	hl
   072E CDrA5s00           1166 	call	_dbg_say
   0731 F1                 1167 	pop	af
   0732 D1                 1168 	pop	de
                           1169 ;debug.c:302: dbg_wtox((word)tmr->next,buff);
   0733 DD 4E EC           1170 	ld	c,-20 (ix)
   0736 DD 46 ED           1171 	ld	b,-19 (ix)
   0739 C5                 1172 	push	bc
   073A FD E1              1173 	pop	iy
   073C 6B                 1174 	ld	l,e
   073D 62                 1175 	ld	h,d
   073E 4E                 1176 	ld	c,(hl)
   073F 23                 1177 	inc	hl
   0740 46                 1178 	ld	b,(hl)
   0741 D5                 1179 	push	de
   0742 FD E5              1180 	push	iy
   0744 C5                 1181 	push	bc
   0745 CDr28s01           1182 	call	_dbg_wtox
   0748 F1                 1183 	pop	af
   0749 F1                 1184 	pop	af
   074A D1                 1185 	pop	de
                           1186 ;debug.c:303: dbg_say(buff); dbg_say("\n");
   074B DD 6E EA           1187 	ld	l,-22 (ix)
   074E DD 66 EB           1188 	ld	h,-21 (ix)
   0751 D5                 1189 	push	de
   0752 E5                 1190 	push	hl
   0753 CDrA5s00           1191 	call	_dbg_say
   0756 F1                 1192 	pop	af
   0757 D1                 1193 	pop	de
   0758 21rA4s07           1194 	ld	hl,#__str_17
   075B D5                 1195 	push	de
   075C E5                 1196 	push	hl
   075D CDrA5s00           1197 	call	_dbg_say
   0760 F1                 1198 	pop	af
                           1199 ;debug.c:305: tmr=tmr->next;
   0761 E1                 1200 	pop	hl
   0762 5E                 1201 	ld	e,(hl)
   0763 23                 1202 	inc	hl
   0764 56                 1203 	ld	d,(hl)
   0765 C3r9As06           1204 	jp	00101$
   0768                    1205 00104$:
   0768 DD F9              1206 	ld	sp,ix
   076A DD E1              1207 	pop	ix
   076C C9                 1208 	ret
   076D                    1209 _dbg_timerdump_end::
   076D                    1210 __str_13:
   076D 54 49 4D 45 52 53  1211 	.ascii "TIMERS:"
        3A
   0774 0A                 1212 	.db 0x0A
   0775 00                 1213 	.db 0x00
   0776                    1214 __str_14:
   0776 74 69 6D 65 72 20  1215 	.ascii "timer tick tc   next"
        74 69 63 6B 20 74
        63 20 20 20 6E 65
        78 74
   078A 0A                 1216 	.db 0x0A
   078B 00                 1217 	.db 0x00
   078C                    1218 __str_15:
   078C 3D 3D 3D 3D 3D 20  1219 	.ascii "===== ==== ==== ===="
        3D 3D 3D 3D 20 3D
        3D 3D 3D 20 3D 3D
        3D 3D
   07A0 0A                 1220 	.db 0x0A
   07A1 00                 1221 	.db 0x00
   07A2                    1222 __str_16:
   07A2 20                 1223 	.ascii " "
   07A3 00                 1224 	.db 0x00
   07A4                    1225 __str_17:
   07A4 0A                 1226 	.db 0x0A
   07A5 00                 1227 	.db 0x00
                           1228 ;debug.c:309: void dbg_eventdump() {
                           1229 ;	---------------------------------
                           1230 ; Function dbg_eventdump
                           1231 ; ---------------------------------
   07A6                    1232 _dbg_eventdump_start::
   07A6                    1233 _dbg_eventdump:
   07A6 DD E5              1234 	push	ix
   07A8 DD 21 00 00        1235 	ld	ix,#0
   07AC DD 39              1236 	add	ix,sp
   07AE 21 F0 FF           1237 	ld	hl,#-16
   07B1 39                 1238 	add	hl,sp
   07B2 F9                 1239 	ld	sp,hl
                           1240 ;debug.c:313: buff[0]=0;
   07B3 21 0A 00           1241 	ld	hl,#0x000A
   07B6 39                 1242 	add	hl,sp
   07B7 EB                 1243 	ex	de,hl
   07B8 3E 00              1244 	ld	a,#0x00
   07BA 12                 1245 	ld	(de),a
                           1246 ;debug.c:315: dbg_say("EVENTS:\n");
   07BB 21r9As08           1247 	ld	hl,#__str_18
   07BE D5                 1248 	push	de
   07BF E5                 1249 	push	hl
   07C0 CDrA5s00           1250 	call	_dbg_say
   07C3 F1                 1251 	pop	af
   07C4 D1                 1252 	pop	de
                           1253 ;debug.c:316: dbg_say("event next state\n");
   07C5 21rA3s08           1254 	ld	hl,#__str_19
   07C8 D5                 1255 	push	de
   07C9 E5                 1256 	push	hl
   07CA CDrA5s00           1257 	call	_dbg_say
   07CD F1                 1258 	pop	af
   07CE D1                 1259 	pop	de
                           1260 ;debug.c:317: dbg_say("===== ==== =====\n");
   07CF 21rB5s08           1261 	ld	hl,#__str_20
   07D2 D5                 1262 	push	de
   07D3 E5                 1263 	push	hl
   07D4 CDrA5s00           1264 	call	_dbg_say
   07D7 F1                 1265 	pop	af
   07D8 D1                 1266 	pop	de
                           1267 ;debug.c:319: e=evt_first;
   07D9 FD 21r00s00        1268 	ld	iy,#_evt_first
   07DD FD 7E 00           1269 	ld	a,0 (iy)
   07E0 DD 77 F8           1270 	ld	-8 (ix),a
   07E3 FD 7E 01           1271 	ld	a,1 (iy)
   07E6 DD 77 F9           1272 	ld	-7 (ix),a
                           1273 ;debug.c:320: while (e) {
   07E9 DD 73 F6           1274 	ld	-10 (ix),e
   07EC DD 72 F7           1275 	ld	-9 (ix),d
   07EF DD 73 F4           1276 	ld	-12 (ix),e
   07F2 DD 72 F5           1277 	ld	-11 (ix),d
   07F5 DD 73 F2           1278 	ld	-14 (ix),e
   07F8 DD 72 F3           1279 	ld	-13 (ix),d
   07FB DD 73 F0           1280 	ld	-16 (ix),e
   07FE DD 72 F1           1281 	ld	-15 (ix),d
   0801                    1282 00104$:
   0801 DD 7E F9           1283 	ld	a,-7 (ix)
   0804 DD B6 F8           1284 	or	a,-8 (ix)
   0807 CAr95s08           1285 	jp	Z,00107$
                           1286 ;debug.c:322: dbg_wtox((word)e,buff);
   080A DD 6E F6           1287 	ld	l,-10 (ix)
   080D DD 66 F7           1288 	ld	h,-9 (ix)
   0810 DD 5E F8           1289 	ld	e,-8 (ix)
   0813 DD 56 F9           1290 	ld	d,-7 (ix)
   0816 E5                 1291 	push	hl
   0817 D5                 1292 	push	de
   0818 CDr28s01           1293 	call	_dbg_wtox
   081B F1                 1294 	pop	af
                           1295 ;debug.c:323: dbg_say(" "); dbg_say(buff); dbg_say(" ");
   081C 21rC7s08           1296 	ld	hl, #__str_21
   081F E3                 1297 	ex	(sp),hl
   0820 CDrA5s00           1298 	call	_dbg_say
   0823 F1                 1299 	pop	af
   0824 DD 6E F4           1300 	ld	l,-12 (ix)
   0827 DD 66 F5           1301 	ld	h,-11 (ix)
   082A E5                 1302 	push	hl
   082B CDrA5s00           1303 	call	_dbg_say
   082E 21rC7s08           1304 	ld	hl, #__str_21
   0831 E3                 1305 	ex	(sp),hl
   0832 CDrA5s00           1306 	call	_dbg_say
   0835 F1                 1307 	pop	af
                           1308 ;debug.c:324: dbg_wtox((word)e->next,buff);
   0836 DD 4E F2           1309 	ld	c,-14 (ix)
   0839 DD 46 F3           1310 	ld	b,-13 (ix)
   083C DD 6E F8           1311 	ld	l,-8 (ix)
   083F DD 66 F9           1312 	ld	h,-7 (ix)
   0842 5E                 1313 	ld	e,(hl)
   0843 23                 1314 	inc	hl
   0844 56                 1315 	ld	d,(hl)
   0845 C5                 1316 	push	bc
   0846 D5                 1317 	push	de
   0847 CDr28s01           1318 	call	_dbg_wtox
   084A F1                 1319 	pop	af
   084B F1                 1320 	pop	af
                           1321 ;debug.c:325: dbg_say(buff); dbg_say(" ");
   084C DD 6E F0           1322 	ld	l,-16 (ix)
   084F DD 66 F1           1323 	ld	h,-15 (ix)
   0852 E5                 1324 	push	hl
   0853 CDrA5s00           1325 	call	_dbg_say
   0856 21rC7s08           1326 	ld	hl, #__str_21
   0859 E3                 1327 	ex	(sp),hl
   085A CDrA5s00           1328 	call	_dbg_say
   085D F1                 1329 	pop	af
                           1330 ;debug.c:326: if (e->state==signaled)
   085E FD 21 04 00        1331 	ld	iy,#0x0004
   0862 DD 5E F8           1332 	ld	e,-8 (ix)
   0865 DD 56 F9           1333 	ld	d,-7 (ix)
   0868 FD 19              1334 	add	iy, de
   086A FD 7E 00           1335 	ld	a, 0 (iy)
   086D D6 01              1336 	sub	a, #0x01
   086F 20 0A              1337 	jr	NZ,00102$
                           1338 ;debug.c:327: dbg_say("signaled\n");
   0871 21rC9s08           1339 	ld	hl,#__str_22
   0874 E5                 1340 	push	hl
   0875 CDrA5s00           1341 	call	_dbg_say
   0878 F1                 1342 	pop	af
   0879 18 08              1343 	jr	00103$
   087B                    1344 00102$:
                           1345 ;debug.c:329: dbg_say("nonsignaled\n");		
   087B 21rD3s08           1346 	ld	hl,#__str_23
   087E E5                 1347 	push	hl
   087F CDrA5s00           1348 	call	_dbg_say
   0882 F1                 1349 	pop	af
   0883                    1350 00103$:
                           1351 ;debug.c:331: e = e->next;
   0883 DD 6E F8           1352 	ld	l,-8 (ix)
   0886 DD 66 F9           1353 	ld	h,-7 (ix)
   0889 7E                 1354 	ld	a,(hl)
   088A DD 77 F8           1355 	ld	-8 (ix),a
   088D 23                 1356 	inc	hl
   088E 7E                 1357 	ld	a,(hl)
   088F DD 77 F9           1358 	ld	-7 (ix),a
   0892 C3r01s08           1359 	jp	00104$
   0895                    1360 00107$:
   0895 DD F9              1361 	ld	sp,ix
   0897 DD E1              1362 	pop	ix
   0899 C9                 1363 	ret
   089A                    1364 _dbg_eventdump_end::
   089A                    1365 __str_18:
   089A 45 56 45 4E 54 53  1366 	.ascii "EVENTS:"
        3A
   08A1 0A                 1367 	.db 0x0A
   08A2 00                 1368 	.db 0x00
   08A3                    1369 __str_19:
   08A3 65 76 65 6E 74 20  1370 	.ascii "event next state"
        6E 65 78 74 20 73
        74 61 74 65
   08B3 0A                 1371 	.db 0x0A
   08B4 00                 1372 	.db 0x00
   08B5                    1373 __str_20:
   08B5 3D 3D 3D 3D 3D 20  1374 	.ascii "===== ==== ====="
        3D 3D 3D 3D 20 3D
        3D 3D 3D 3D
   08C5 0A                 1375 	.db 0x0A
   08C6 00                 1376 	.db 0x00
   08C7                    1377 __str_21:
   08C7 20                 1378 	.ascii " "
   08C8 00                 1379 	.db 0x00
   08C9                    1380 __str_22:
   08C9 73 69 67 6E 61 6C  1381 	.ascii "signaled"
        65 64
   08D1 0A                 1382 	.db 0x0A
   08D2 00                 1383 	.db 0x00
   08D3                    1384 __str_23:
   08D3 6E 6F 6E 73 69 67  1385 	.ascii "nonsignaled"
        6E 61 6C 65 64
   08DE 0A                 1386 	.db 0x0A
   08DF 00                 1387 	.db 0x00
                           1388 	.area _CODE
                           1389 	.area _CABS
