                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.0 #7066 (Jun 14 2012) (Linux)
                              4 ; This file was generated Tue Nov 27 20:33:01 2012
                              5 ;--------------------------------------------------------
                              6 	.module timer
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _di
                             13 	.globl _ei
                             14 	.globl _lst_delete
                             15 	.globl _lst_insert
                             16 	.globl _tmr_first
                             17 	.globl _tmr_install
                             18 	.globl _tmr_uninstall
                             19 	.globl _tmr_chain
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ;  ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _tmr_first::
   0000                      28 	.ds 2
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in  ram 
                             31 ;--------------------------------------------------------
                             32 	.area _OVERLAY
                             33 ;--------------------------------------------------------
                             34 ; external initialized ram data
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;timer.c:9: timer_t *tmr_first=NULL;
   0000 FD 21r00s00          44 	ld	iy,#_tmr_first
   0004 FD 36 00 00          45 	ld	0 (iy),#0x00
   0008 FD 36 01 00          46 	ld	1 (iy),#0x00
                             47 ;--------------------------------------------------------
                             48 ; Home
                             49 ;--------------------------------------------------------
                             50 	.area _HOME
                             51 	.area _HOME
                             52 ;--------------------------------------------------------
                             53 ; code
                             54 ;--------------------------------------------------------
                             55 	.area _CODE
                             56 ;timer.c:14: timer_t *tmr_install(void (*hook)(), word ticks) {
                             57 ;	---------------------------------
                             58 ; Function tmr_install
                             59 ; ---------------------------------
   0000                      60 _tmr_install_start::
   0000                      61 _tmr_install:
   0000 DD E5                62 	push	ix
   0002 DD 21 00 00          63 	ld	ix,#0
   0006 DD 39                64 	add	ix,sp
                             65 ;timer.c:16: di();
   0008 CDr00s00             66 	call	_di
                             67 ;timer.c:17: t=(timer_t *)lst_insert((list_header_t **)&tmr_first, sizeof(timer_t), KERNEL);
   000B 11r00s00             68 	ld	de,#_tmr_first
   000E 21 00 01             69 	ld	hl,#0x0100
   0011 E5                   70 	push	hl
   0012 21 0A 00             71 	ld	hl,#0x000A
   0015 E5                   72 	push	hl
   0016 D5                   73 	push	de
   0017 CDr00s00             74 	call	_lst_insert
   001A F1                   75 	pop	af
   001B F1                   76 	pop	af
   001C F1                   77 	pop	af
   001D EB                   78 	ex	de,hl
                             79 ;timer.c:18: t->hook=hook;
   001E 21 04 00             80 	ld	hl,#0x0004
   0021 19                   81 	add	hl,de
   0022 DD 7E 04             82 	ld	a,4 (ix)
   0025 77                   83 	ld	(hl),a
   0026 23                   84 	inc	hl
   0027 DD 7E 05             85 	ld	a,5 (ix)
   002A 77                   86 	ld	(hl),a
                             87 ;timer.c:19: t->_tick_count=t->ticks=ticks;
   002B 21 08 00             88 	ld	hl,#0x0008
   002E 19                   89 	add	hl,de
   002F 45                   90 	ld	b,l
   0030 4C                   91 	ld	c,h
   0031 21 06 00             92 	ld	hl,#0x0006
   0034 19                   93 	add	hl,de
   0035 DD 7E 06             94 	ld	a,6 (ix)
   0038 77                   95 	ld	(hl),a
   0039 23                   96 	inc	hl
   003A DD 7E 07             97 	ld	a,7 (ix)
   003D 77                   98 	ld	(hl),a
   003E 68                   99 	ld	l,b
   003F 61                  100 	ld	h,c
   0040 DD 7E 06            101 	ld	a,6 (ix)
   0043 77                  102 	ld	(hl),a
   0044 23                  103 	inc	hl
   0045 DD 7E 07            104 	ld	a,7 (ix)
   0048 77                  105 	ld	(hl),a
                            106 ;timer.c:20: last_error=RESULT_SUCCESS;
   0049 21r00s00            107 	ld	hl,#_last_error + 0
   004C 36 00               108 	ld	(hl), #0x00
                            109 ;timer.c:21: ei();
   004E D5                  110 	push	de
   004F CDr00s00            111 	call	_ei
                            112 ;timer.c:22: return t;
   0052 E1                  113 	pop	hl
   0053 DD E1               114 	pop	ix
   0055 C9                  115 	ret
   0056                     116 _tmr_install_end::
                            117 ;timer.c:28: result tmr_uninstall(timer_t *t) {
                            118 ;	---------------------------------
                            119 ; Function tmr_uninstall
                            120 ; ---------------------------------
   0056                     121 _tmr_uninstall_start::
   0056                     122 _tmr_uninstall:
   0056 DD E5               123 	push	ix
   0058 DD 21 00 00         124 	ld	ix,#0
   005C DD 39               125 	add	ix,sp
                            126 ;timer.c:30: di();
   005E CDr00s00            127 	call	_di
                            128 ;timer.c:31: r=lst_delete((list_header_t **)&tmr_first, (list_header_t *)t, 1);
   0061 DD 5E 04            129 	ld	e,4 (ix)
   0064 DD 56 05            130 	ld	d,5 (ix)
   0067 01r00s00            131 	ld	bc,#_tmr_first
   006A 3E 01               132 	ld	a,#0x01
   006C F5                  133 	push	af
   006D 33                  134 	inc	sp
   006E D5                  135 	push	de
   006F C5                  136 	push	bc
   0070 CDr00s00            137 	call	_lst_delete
   0073 F1                  138 	pop	af
   0074 F1                  139 	pop	af
   0075 33                  140 	inc	sp
   0076 55                  141 	ld	d,l
                            142 ;timer.c:32: ei();
   0077 D5                  143 	push	de
   0078 CDr00s00            144 	call	_ei
   007B D1                  145 	pop	de
                            146 ;timer.c:33: return r;
   007C 6A                  147 	ld	l,d
   007D DD E1               148 	pop	ix
   007F C9                  149 	ret
   0080                     150 _tmr_uninstall_end::
                            151 ;timer.c:41: void tmr_chain() {
                            152 ;	---------------------------------
                            153 ; Function tmr_chain
                            154 ; ---------------------------------
   0080                     155 _tmr_chain_start::
   0080                     156 _tmr_chain:
   0080 DD E5               157 	push	ix
   0082 DD 21 00 00         158 	ld	ix,#0
   0086 DD 39               159 	add	ix,sp
   0088 21 FA FF            160 	ld	hl,#-6
   008B 39                  161 	add	hl,sp
   008C F9                  162 	ld	sp,hl
                            163 ;timer.c:42: timer_t *t=tmr_first;
   008D FD 21r00s00         164 	ld	iy,#_tmr_first
   0091 FD 7E 00            165 	ld	a,0 (iy)
   0094 DD 77 FE            166 	ld	-2 (ix),a
   0097 FD 7E 01            167 	ld	a,1 (iy)
   009A DD 77 FF            168 	ld	-1 (ix),a
                            169 ;timer.c:43: while(t) {
   009D                     170 00104$:
   009D DD 7E FF            171 	ld	a,-1 (ix)
   00A0 DD B6 FE            172 	or	a,-2 (ix)
   00A3 CAr34s01            173 	jp	Z,00106$
                            174 ;timer.c:44: if (t->_tick_count==0) { /* trig it */
   00A6 DD 7E FE            175 	ld	a,-2 (ix)
   00A9 C6 08               176 	add	a, #0x08
   00AB DD 77 FC            177 	ld	-4 (ix),a
   00AE DD 7E FF            178 	ld	a,-1 (ix)
   00B1 CE 00               179 	adc	a, #0x00
   00B3 DD 77 FD            180 	ld	-3 (ix),a
   00B6 DD 6E FC            181 	ld	l,-4 (ix)
   00B9 DD 66 FD            182 	ld	h,-3 (ix)
   00BC 7E                  183 	ld	a,(hl)
   00BD DD 77 FA            184 	ld	-6 (ix),a
   00C0 23                  185 	inc	hl
   00C1 7E                  186 	ld	a,(hl)
   00C2 DD 77 FB            187 	ld	-5 (ix), a
   00C5 DD B6 FA            188 	or	a,-6 (ix)
   00C8 20 2D               189 	jr	NZ,00102$
                            190 ;timer.c:45: t->_tick_count=t->ticks;			
   00CA DD 7E FE            191 	ld	a,-2 (ix)
   00CD C6 06               192 	add	a, #0x06
   00CF 6F                  193 	ld	l,a
   00D0 DD 7E FF            194 	ld	a,-1 (ix)
   00D3 CE 00               195 	adc	a, #0x00
   00D5 67                  196 	ld	h,a
   00D6 56                  197 	ld	d,(hl)
   00D7 23                  198 	inc	hl
   00D8 5E                  199 	ld	e,(hl)
   00D9 DD 6E FC            200 	ld	l,-4 (ix)
   00DC DD 66 FD            201 	ld	h,-3 (ix)
   00DF 72                  202 	ld	(hl),d
   00E0 23                  203 	inc	hl
   00E1 73                  204 	ld	(hl),e
                            205 ;timer.c:46: t->hook();
   00E2 DD 7E FE            206 	ld	a,-2 (ix)
   00E5 C6 04               207 	add	a, #0x04
   00E7 6F                  208 	ld	l,a
   00E8 DD 7E FF            209 	ld	a,-1 (ix)
   00EB CE 00               210 	adc	a, #0x00
   00ED 67                  211 	ld	h,a
   00EE 7E                  212 	ld	a,(hl)
   00EF 23                  213 	inc	hl
   00F0 66                  214 	ld	h,(hl)
   00F1 6F                  215 	ld	l,a
   00F2 CDr00s00            216 	call	__sdcc_call_hl
   00F5 18 2B               217 	jr	00103$
   00F7                     218 00102$:
                            219 ;timer.c:47: } else t->_tick_count--;
   00F7 DD 6E FC            220 	ld	l,-4 (ix)
   00FA DD 66 FD            221 	ld	h,-3 (ix)
   00FD 7E                  222 	ld	a,(hl)
   00FE DD 77 FA            223 	ld	-6 (ix),a
   0101 23                  224 	inc	hl
   0102 7E                  225 	ld	a,(hl)
   0103 DD 77 FB            226 	ld	-5 (ix),a
   0106 DD 6E FA            227 	ld	l,-6 (ix)
   0109 DD 66 FB            228 	ld	h,-5 (ix)
   010C 2B                  229 	dec	hl
   010D DD 75 FA            230 	ld	-6 (ix),l
   0110 DD 74 FB            231 	ld	-5 (ix),h
   0113 DD 6E FC            232 	ld	l,-4 (ix)
   0116 DD 66 FD            233 	ld	h,-3 (ix)
   0119 DD 7E FA            234 	ld	a,-6 (ix)
   011C 77                  235 	ld	(hl),a
   011D 23                  236 	inc	hl
   011E DD 7E FB            237 	ld	a,-5 (ix)
   0121 77                  238 	ld	(hl),a
   0122                     239 00103$:
                            240 ;timer.c:48: t=t->next;
   0122 DD 6E FE            241 	ld	l,-2 (ix)
   0125 DD 66 FF            242 	ld	h,-1 (ix)
   0128 7E                  243 	ld	a,(hl)
   0129 DD 77 FE            244 	ld	-2 (ix),a
   012C 23                  245 	inc	hl
   012D 7E                  246 	ld	a,(hl)
   012E DD 77 FF            247 	ld	-1 (ix),a
   0131 C3r9Ds00            248 	jp	00104$
   0134                     249 00106$:
                            250 ;timer.c:50: last_error=RESULT_SUCCESS;
   0134 21r00s00            251 	ld	hl,#_last_error + 0
   0137 36 00               252 	ld	(hl), #0x00
   0139 DD F9               253 	ld	sp,ix
   013B DD E1               254 	pop	ix
   013D C9                  255 	ret
   013E                     256 _tmr_chain_end::
                            257 	.area _CODE
                            258 	.area _CABS
