                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.0 #7066 (Jun 14 2012) (Linux)
                              4 ; This file was generated Tue Nov 27 20:21:18 2012
                              5 ;--------------------------------------------------------
                              6 	.module ukernel
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _set_vector
                             13 	.globl _ball3
                             14 	.globl _ball2
                             15 	.globl _ball
                             16 	.globl _init_balls
                             17 	.globl _kbd_timer_hook
                             18 	.globl _kbd_read_async
                             19 	.globl _kbd_close
                             20 	.globl _kbd_open
                             21 	.globl _drv_register
                             22 	.globl _tsk_create
                             23 	.globl _executive
                             24 	.globl _main
                             25 ;--------------------------------------------------------
                             26 ; special function registers
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ;  ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DATA
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in  ram 
                             34 ;--------------------------------------------------------
                             35 	.area _OVERLAY
                             36 ;--------------------------------------------------------
                             37 ; external initialized ram data
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;ukernel.c:9: void executive() __naked {
                             56 ;	---------------------------------
                             57 ; Function executive
                             58 ; ---------------------------------
   0000                      59 _executive_start::
   0000                      60 _executive:
                             61 ;ukernel.c:16: __endasm;
   0000 C3r00s00             62 	jp	_tsk_switch
   0003                      63 _executive_end::
                             64 ;ukernel.c:19: void main() {
                             65 ;	---------------------------------
                             66 ; Function main
                             67 ; ---------------------------------
   0003                      68 _main_start::
   0003                      69 _main:
                             70 ;ukernel.c:24: set_vector(RST38,executive,NULL);
   0003 21 00 00             71 	ld	hl,#0x0000
   0006 E5                   72 	push	hl
   0007 21r00s00             73 	ld	hl,#_executive
   000A E5                   74 	push	hl
   000B 3E 06                75 	ld	a,#0x06
   000D F5                   76 	push	af
   000E 33                   77 	inc	sp
   000F CDr00s00             78 	call	_set_vector
   0012 F1                   79 	pop	af
   0013 F1                   80 	pop	af
   0014 33                   81 	inc	sp
                             82 ;ukernel.c:30: mem_init();
   0015 CDr00s00             83 	call	_mem_init
                             84 ;ukernel.c:37: drv_register('K','B','D',	
   0018 21 00 00             85 	ld	hl,#0x0000
   001B E5                   86 	push	hl
   001C 21r00s00             87 	ld	hl,#_kbd_timer_hook
   001F E5                   88 	push	hl
   0020 21 00 00             89 	ld	hl,#0x0000
   0023 E5                   90 	push	hl
   0024 2E 00                91 	ld	l, #0x00
   0026 E5                   92 	push	hl
   0027 21r00s00             93 	ld	hl,#_kbd_read_async
   002A E5                   94 	push	hl
   002B 21r00s00             95 	ld	hl,#_kbd_close
   002E E5                   96 	push	hl
   002F 21r00s00             97 	ld	hl,#_kbd_open
   0032 E5                   98 	push	hl
   0033 21 42 44             99 	ld	hl,#0x4442
   0036 E5                  100 	push	hl
   0037 3E 4B               101 	ld	a,#0x4B
   0039 F5                  102 	push	af
   003A 33                  103 	inc	sp
   003B CDr00s00            104 	call	_drv_register
   003E 21 11 00            105 	ld	hl,#0x0011
   0041 39                  106 	add	hl,sp
   0042 F9                  107 	ld	sp,hl
                            108 ;ukernel.c:49: init_balls();
   0043 CDr00s00            109 	call	_init_balls
                            110 ;ukernel.c:50: tsk_create(ball, 1024, 256);
   0046 21 00 01            111 	ld	hl,#0x0100
   0049 E5                  112 	push	hl
   004A 26 04               113 	ld	h, #0x04
   004C E5                  114 	push	hl
   004D 21r00s00            115 	ld	hl,#_ball
   0050 E5                  116 	push	hl
   0051 CDr00s00            117 	call	_tsk_create
   0054 F1                  118 	pop	af
   0055 F1                  119 	pop	af
   0056 F1                  120 	pop	af
                            121 ;ukernel.c:51: tsk_create(ball2, 1024, 256);
   0057 21 00 01            122 	ld	hl,#0x0100
   005A E5                  123 	push	hl
   005B 26 04               124 	ld	h, #0x04
   005D E5                  125 	push	hl
   005E 21r00s00            126 	ld	hl,#_ball2
   0061 E5                  127 	push	hl
   0062 CDr00s00            128 	call	_tsk_create
   0065 F1                  129 	pop	af
   0066 F1                  130 	pop	af
   0067 F1                  131 	pop	af
                            132 ;ukernel.c:52: tsk_create(ball3, 1024, 256);
   0068 21 00 01            133 	ld	hl,#0x0100
   006B E5                  134 	push	hl
   006C 26 04               135 	ld	h, #0x04
   006E E5                  136 	push	hl
   006F 21r00s00            137 	ld	hl,#_ball3
   0072 E5                  138 	push	hl
   0073 CDr00s00            139 	call	_tsk_create
   0076 F1                  140 	pop	af
   0077 F1                  141 	pop	af
   0078 F1                  142 	pop	af
   0079 C9                  143 	ret
   007A                     144 _main_end::
                            145 	.area _CODE
                            146 	.area _CABS
