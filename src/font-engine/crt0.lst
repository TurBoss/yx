ASxxxx Assembler V02.00 + NoICE + SDCC mods + Flat24  (Zilog Z80 / Hitachi HD64180), page 1.



                              1 		;; crt0.s
                              2 		;; zx spectrum rom startup code
                              3 		;;
                              4 		;; tomaz stih, sat jun 16 2012
                              5 
                              6 		.module crt0
                              7 
                              8 		.area	_HEADER (ABS)
   0000                       9 		.org	0x0000
   0000 F3                   10 		di				; disable interrupts
   0001 C3 6B 00             11 		jp	init			; init
   0004 00 00 00 00          12 		.db	0,0,0,0			
                             13 
                             14 		;; rst 0x08
   0008 C3 00 00             15 		jp	rst8
   000B ED 4D                16 rst8ret:	reti
   000D 00 00 00             17 		.db	0,0,0
                             18 
                             19 		;; rst 0x10
   0010 C3 03 00             20 		jp	rst10
   0013 ED 4D                21 rst10ret:	reti
   0015 00 00 00             22 		.db	0,0,0
                             23 
                             24 		;; rst 0x18
   0018 C3 06 00             25 		jp	rst18
   001B ED 4D                26 rst18ret: 	reti
   001D 00 00 00             27 		.db	0,0,0
                             28 
                             29 		;; rst 0x20
   0020 C3 09 00             30 		jp	rst20
   0023 ED 4D                31 rst20ret:	reti
   0025 00 00 00             32 		.db	0,0,0
                             33 
                             34 		;; rst 0x28 
   0028 C3 0C 00             35 		jp	rst28
   002B ED 4D                36 rst28ret:	reti
   002D 00 00 00             37 		.db	0,0,0
                             38 
                             39 		;; rst 0x30
   0030 C3 0F 00             40 		jp	rst30
   0033 ED 4D                41 rst30ret:	reti
   0035 00 00 00             42 		.db	0,0,0
                             43 
                             44 		;; rst 0x38 - im 1
   0038 C3 12 00             45 		jp	rst38
   003B ED 4D                46 rst38ret:	reti
   003D 00 00 00 00 00 00    47 		.dw	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        00 00 00 00 00 00
        00 00 00 00 00 00
        00 00 00 00 00 00
        00 00 00 00 00 00
        00 00 00 00 00 00
        00 00 00 00
   0065 00                   48 		.db	0
                             49 	
                             50 		;; nmi interrupt 0x66
ASxxxx Assembler V02.00 + NoICE + SDCC mods + Flat24  (Zilog Z80 / Hitachi HD64180), page 2.



   0066 C3 15 00             51 		jp	nmi
   0069 ED 45                52 nmiret:		retn
                             53 		
   006B                      54 init:		
   006B 31 00 04             55 		ld	sp,#osstack		
   006E CD 00 00             56 		call	gsinit			; init static vars
                             57 
                             58 		;; start the os
   0071 CD 00 00             59 		call	_main			
                             60 
                             61 		;; start the scheduler
   0074 ED 56                62 		im	1			; im 1, 50Hz interrupt on ZX Spectrum
   0076 FB                   63 		ei				; enable interrupts
                             64 
   0077                      65 halt:
   0077 76                   66 		halt				; halt
   0078 18 FD                67 		jr	halt			
                             68 
   007A                      69 start_vectors:
   007A C3 0B 00             70 		jp	rst8ret
   007D C3 13 00             71 		jp	rst10ret
   0080 C3 1B 00             72 		jp	rst18ret
   0083 C3 23 00             73 		jp	rst20ret
   0086 C3 2B 00             74 		jp	rst28ret
   0089 C3 33 00             75 		jp	rst30ret
   008C C3 3B 00             76 		jp	rst38ret
   008F C3 69 00             77 		jp	nmiret
   0092                      78 end_vectors:
                             79 
                             80 		;; (linker documentation) where specific ordering is desired - 
                             81 		;; the first linker input  file should  have  the area definitions 
                             82 		;; in the desired order
                             83 		.area	_HOME
                             84 		.area	_CODE
                             85 	        .area   _GSINIT
                             86 	        .area   _GSFINAL	
                             87 		.area	_DATA
                             88 	        .area   _BSS
                             89 	        .area   _HEAP
                             90 
                             91 		;; this area contains data initialization code -
                             92 		;; unlike gnu toolchain which generates data, sdcc generates 
                             93 		;; initialization code for every initialized global 
                             94 		;; varibale. and it puts this code into _GSINIT area
                             95         	.area   _GSINIT
   0000                      96 gsinit:
                             97 		;; move vector table to RAM
   0000 21 7A 00             98 		ld	hl,#start_vectors
   0003 11 00 00             99 		ld	de,#vec_tbl
   0006 01 18 00            100 		ld	bc,#end_vectors - #start_vectors
   0009 ED B0               101 		ldir
                            102 		
                            103         	.area   _GSFINAL
   0000 C9                  104         	ret
                            105 
                            106 		.area	_DATA
ASxxxx Assembler V02.00 + NoICE + SDCC mods + Flat24  (Zilog Z80 / Hitachi HD64180), page 3.



                            107 		;; vector jump table in ram
   0000                     108 vec_tbl:
   0000                     109 rst8:		.ds	3
   0003                     110 rst10:		.ds	3
   0006                     111 rst18:		.ds	3
   0009                     112 rst20:		.ds	3
   000C                     113 rst28:		.ds	3
   000F                     114 rst30:		.ds	3
   0012                     115 rst38:		.ds	3
   0015                     116 nmi:		.ds	3
                            117 
                            118 		.area	_BSS
                            119 		;; 1024 bytes of operating system stack
   0000                     120 		.ds	1024
   0400                     121 osstack:	
                            122 		.area	_HEAP
   0000                     123 osheap:	
